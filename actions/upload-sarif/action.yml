name: 'Code Scanning : Upload SARIF'
description: 'Upload the analysis results'
inputs:
  sarif_file:
    description:
    required: false
    default: '../results'
  checkout_path:
    description:
    required: false
    default: ${{ github.workspace }}
  ref:
    description:
    required: false
  sha:
    description:
    required: false
  token:
    description:
    required: false
    default: ${{ github.token }}
  matrix:
    description:
    default: ${{ toJson(matrix) }}
  category:
    description:
    required: false
  wait-for-processing:
    description:
    required: true
    default: "true"
  check-spelling-working-directory:
    description:
    required: false
    default: ''
  started-at:
    description:
    required: false
    default: ''
outputs:
  sarif-id:
    description:
    value: ${{ steps.action.outputs.sarif-id }}
runs:
  using: "composite"
  steps:
  - name: Upload SARIF
    id: action
    continue-on-error: true
    shell: bash
    run: |
      : Upload SARIF
      export sarif_gz_file=$(mktemp)
      cat "$sarif_file" | gzip -c | base64 -w0 > "$sarif_gz_file"

      sarif_payload=$(mktemp)
      sha="${sha:-$GITHUB_SHA}" \
      ref="${ref:-$GITHUB_REF}" \
      perl -e '
        use Cwd;
        my $dir = getcwd;
        use JSON::PP;
        my $json = JSON::PP->new->utf8->pretty->sort_by(sub { $JSON::PP::a cmp $JSON::PP::b });
        my %data;
        my $sarif;
        {
          local $/;
          open my $input, "<", $ENV{"sarif_gz_file"};
          $sarif = <$input>;
        }
        $data{"commit_sha"}=$ENV{sha};
        $data{"ref"}=$ENV{ref};
        $data{"checkout_uri"}="file://$dir";
        $data{"tool_name"}="check-spelling";
        $data{"sarif"}=$sarif;
        my $started_at = $ENV{started_at};
        $data{"started_at"} = $started_at if defined $started_at;
        print encode_json \%data;
      ' > "$sarif_payload"
      rm -f "$sarif_gz_file"

      result=$(mktemp)
      curl -s -L \
        -X POST \
        -H "Accept: application/vnd.github+json" \
        -H "Authorization: Bearer $GH_TOKEN" \
        -H "X-GitHub-Api-Version: 2022-11-28" \
        "$GITHUB_API_URL/repos/$GITHUB_REPOSITORY/code-scanning/sarifs" \
        -d @"$sarif_payload" -o "$result"
      rm -f "$sarif_payload"
      echo "sarif-id=$(jq .id "$result")" > "$GITHUB_OUTPUT"
    working-directory: ${{ inputs.checkout_path }}
    env:
      GH_TOKEN: ${{ inputs.token }}
      category: ${{ inputs.category }}
      matrix: ${{ inputs.matrix }}
      ref: ${{ inputs.ref }}
      sarif_file: ${{ inputs.sarif_file }}
      sha: ${{ inputs.sha }}
      started_at: ${{ inputs.started-at }}
      wait-for-processing: ${{ inputs.wait-for-processing }}
